HTTP/1.1 500 INTERNAL SERVER ERROR
Server: Werkzeug/3.0.1 Python/3.12.2
Date: Sun, 18 May 2025 10:36:38 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 34940
Connection: close

<!doctype html>
<html lang=en>
  <head>
    <title>LookupError: &#39;draft&#39; is not among the defined enum values. Enum name: poststatus. Possible values: DRAFT, IN_PROCESS, PUBLISHED, ARCHIVED
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "OSw0oKw0dRm9r8Onsosp";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>LookupError</h1>
<div class="detail">
  <p class="errormsg">LookupError: &#39;draft&#39; is not among the defined enum values. Enum name: poststatus. Possible values: DRAFT, IN_PROCESS, PUBLISHED, ARCHIVED
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-5133617760">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/sql/sqltypes.py"</cite>,
      line <em class="line">1609</em>,
      in <code class="function">_object_value_for_elem</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>comparator_factory = Comparator</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def _object_value_for_elem(self, elem):</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>return self._object_lookup[elem]
<span class="ws">            </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except KeyError as err:</pre>
<pre class="line after"><span class="ws">            </span>raise LookupError(</pre>
<pre class="line after"><span class="ws">                </span>&#34;&#39;%s&#39; is not among the defined enum values. &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;Enum name: %s. Possible values: %s&#34;</pre>
<pre class="line after"><span class="ws">                </span>% (</pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-5132925056">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py"</cite>,
      line <em class="line">1488</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-5132925920">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py"</cite>,
      line <em class="line">1466</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-5132926064">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py"</cite>,
      line <em class="line">1463</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-5132926208">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py"</cite>,
      line <em class="line">872</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-5132926352">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py"</cite>,
      line <em class="line">870</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-5132926496">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py"</cite>,
      line <em class="line">855</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-5132926640">
  <h4>File <cite class="filename">"/Users/nickfiddes/Code/projects/blog/app/main/routes.py"</cite>,
      line <em class="line">15</em>,
      in <code class="function">index</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>@bp.route(&#34;/&#34;)</pre>
<pre class="line before"><span class="ws"></span>def index():</pre>
<pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;Home page with direct access to admin features.&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">    </span># Get all posts without filtering</pre>
<pre class="line current"><span class="ws">    </span>posts = Post.query.order_by(Post.created_at.desc()).all()
<span class="ws">    </span>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Get all categories</pre>
<pre class="line after"><span class="ws">    </span>categories = Category.query.order_by(Category.name).all()</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return render_template(</pre></div>
</div>

<li><div class="frame" id="frame-5132926784">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/orm/query.py"</cite>,
      line <em class="line">2672</em>,
      in <code class="function">all</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">            </span>:meth:`_engine.Result.all` - v2 comparable method.</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">            </span>:meth:`_engine.Result.scalars` - v2 comparable method.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self._iter().all()  # type: ignore
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>@_generative</pre>
<pre class="line after"><span class="ws">    </span>@_assertions(_no_clauseelement_condition)</pre>
<pre class="line after"><span class="ws">    </span>def from_statement(self, statement: ExecutableReturnsRows) -&gt; Self:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Execute the given SELECT statement and return results.</pre></div>
</div>

<li><div class="frame" id="frame-5133615600">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py"</cite>,
      line <em class="line">1769</em>,
      in <code class="function">all</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>Equivalent to :meth:`_engine.Result.all` except that</pre>
<pre class="line before"><span class="ws">        </span>scalar values, rather than :class:`_engine.Row` objects,</pre>
<pre class="line before"><span class="ws">        </span>are returned.</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self._allrows()
<span class="ws">        </span>       ^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __iter__(self) -&gt; Iterator[_R]:</pre>
<pre class="line after"><span class="ws">        </span>return self._iter_impl()</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __next__(self) -&gt; _R:</pre></div>
</div>

<li><div class="frame" id="frame-5133616032">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py"</cite>,
      line <em class="line">548</em>,
      in <code class="function">_allrows</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>def _allrows(self) -&gt; List[_R]:</pre>
<pre class="line before"><span class="ws">        </span>post_creational_filter = self._post_creational_filter</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>make_row = self._row_getter</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>rows = self._fetchall_impl()
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>made_rows: List[_InterimRowType[_R]]</pre>
<pre class="line after"><span class="ws">        </span>if make_row:</pre>
<pre class="line after"><span class="ws">            </span>made_rows = [make_row(row) for row in rows]</pre>
<pre class="line after"><span class="ws">        </span>else:</pre>
<pre class="line after"><span class="ws">            </span>made_rows = rows  # type: ignore</pre></div>
</div>

<li><div class="frame" id="frame-5133616176">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py"</cite>,
      line <em class="line">1676</em>,
      in <code class="function">_fetchall_impl</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self, hard_close: bool = False</pre>
<pre class="line before"><span class="ws">    </span>) -&gt; Optional[_InterimRowType[Row[Any]]]:</pre>
<pre class="line before"><span class="ws">        </span>return self._real_result._fetchone_impl(hard_close=hard_close)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def _fetchall_impl(self) -&gt; List[_InterimRowType[Row[Any]]]:</pre>
<pre class="line current"><span class="ws">        </span>return self._real_result._fetchall_impl()
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _fetchmany_impl(</pre>
<pre class="line after"><span class="ws">        </span>self, size: Optional[int] = None</pre>
<pre class="line after"><span class="ws">    </span>) -&gt; List[_InterimRowType[Row[Any]]]:</pre>
<pre class="line after"><span class="ws">        </span>return self._real_result._fetchmany_impl(size=size)</pre></div>
</div>

<li><div class="frame" id="frame-5133616320">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py"</cite>,
      line <em class="line">2270</em>,
      in <code class="function">_fetchall_impl</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def _fetchall_impl(self) -&gt; List[_InterimRowType[Row[Any]]]:</pre>
<pre class="line before"><span class="ws">        </span>if self._hard_closed:</pre>
<pre class="line before"><span class="ws">            </span>self._raise_hard_closed()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>return list(self.iterator)
<span class="ws">            </span>       ^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span>self._soft_close()</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _fetchmany_impl(</pre>
<pre class="line after"><span class="ws">        </span>self, size: Optional[int] = None</pre></div>
</div>

<li><div class="frame" id="frame-5133616464">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/orm/loading.py"</cite>,
      line <em class="line">219</em>,
      in <code class="function">chunks</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                </span>fetch = cursor.fetchmany(yield_per)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                </span>if not fetch:</pre>
<pre class="line before"><span class="ws">                    </span>break</pre>
<pre class="line before"><span class="ws">            </span>else:</pre>
<pre class="line current"><span class="ws">                </span>fetch = cursor._raw_all_rows()
<span class="ws">                </span>        ^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if single_entity:</pre>
<pre class="line after"><span class="ws">                </span>proc = process[0]</pre>
<pre class="line after"><span class="ws">                </span>rows = [proc(row) for row in fetch]</pre>
<pre class="line after"><span class="ws">            </span>else:</pre></div>
</div>

<li><div class="frame" id="frame-5133616752">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py"</cite>,
      line <em class="line">541</em>,
      in <code class="function">_raw_all_rows</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def _raw_all_rows(self) -&gt; List[_R]:</pre>
<pre class="line before"><span class="ws">        </span>make_row = self._row_getter</pre>
<pre class="line before"><span class="ws">        </span>assert make_row is not None</pre>
<pre class="line before"><span class="ws">        </span>rows = self._fetchall_impl()</pre>
<pre class="line current"><span class="ws">        </span>return [make_row(row) for row in rows]
<span class="ws">        </span>        ^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _allrows(self) -&gt; List[_R]:</pre>
<pre class="line after"><span class="ws">        </span>post_creational_filter = self._post_creational_filter</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>make_row = self._row_getter</pre></div>
</div>

<li><div class="frame" id="frame-5133616896">
  <h4>File <cite class="filename">"lib/sqlalchemy/cyextension/resultproxy.pyx"</cite>,
      line <em class="line">22</em>,
      in <code class="function">sqlalchemy.cyextension.resultproxy.BaseRow.__init__</code></h4>
  <div class="source "></div>
</div>

<li><div class="frame" id="frame-5133617040">
  <h4>File <cite class="filename">"lib/sqlalchemy/cyextension/resultproxy.pyx"</cite>,
      line <em class="line">79</em>,
      in <code class="function">sqlalchemy.cyextension.resultproxy._apply_processors</code></h4>
  <div class="source "></div>
</div>

<li><div class="frame" id="frame-5133617184">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/sql/sqltypes.py"</cite>,
      line <em class="line">1729</em>,
      in <code class="function">process</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def process(value):</pre>
<pre class="line before"><span class="ws">            </span>if parent_processor:</pre>
<pre class="line before"><span class="ws">                </span>value = parent_processor(value)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">            </span>value = self._object_value_for_elem(value)
<span class="ws">            </span>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>return value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>return process</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def copy(self, **kw):</pre></div>
</div>

<li><div class="frame" id="frame-5133617616">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/sql/sqltypes.py"</cite>,
      line <em class="line">1611</em>,
      in <code class="function">_object_value_for_elem</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def _object_value_for_elem(self, elem):</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>return self._object_lookup[elem]</pre>
<pre class="line before"><span class="ws">        </span>except KeyError as err:</pre>
<pre class="line current"><span class="ws">            </span>raise LookupError(
<span class="ws">            </span>^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                </span>&#34;&#39;%s&#39; is not among the defined enum values. &#34;</pre>
<pre class="line after"><span class="ws">                </span>&#34;Enum name: %s. Possible values: %s&#34;</pre>
<pre class="line after"><span class="ws">                </span>% (</pre>
<pre class="line after"><span class="ws">                    </span>elem,</pre>
<pre class="line after"><span class="ws">                    </span>self.name,</pre></div>
</div>
</ul>
  <blockquote>LookupError: &#39;draft&#39; is not among the defined enum values. Enum name: poststatus. Possible values: DRAFT, IN_PROCESS, PUBLISHED, ARCHIVED
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/sql/sqltypes.py&#34;, line 1609, in _object_value_for_elem
    return self._object_lookup[elem]
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyError: &#39;draft&#39;

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py&#34;, line 1488, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py&#34;, line 1466, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py&#34;, line 1463, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py&#34;, line 872, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py&#34;, line 870, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py&#34;, line 855, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Users/nickfiddes/Code/projects/blog/app/main/routes.py&#34;, line 15, in index
    posts = Post.query.order_by(Post.created_at.desc()).all()
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/orm/query.py&#34;, line 2672, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py&#34;, line 1769, in all
    return self._allrows()
           ^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py&#34;, line 548, in _allrows
    rows = self._fetchall_impl()
           ^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py&#34;, line 1676, in _fetchall_impl
    return self._real_result._fetchall_impl()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py&#34;, line 2270, in _fetchall_impl
    return list(self.iterator)
           ^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/orm/loading.py&#34;, line 219, in chunks
    fetch = cursor._raw_all_rows()
            ^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py&#34;, line 541, in _raw_all_rows
    return [make_row(row) for row in rows]
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;lib/sqlalchemy/cyextension/resultproxy.pyx&#34;, line 22, in sqlalchemy.cyextension.resultproxy.BaseRow.__init__
  File &#34;lib/sqlalchemy/cyextension/resultproxy.pyx&#34;, line 79, in sqlalchemy.cyextension.resultproxy._apply_processors
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/sql/sqltypes.py&#34;, line 1729, in process
    value = self._object_value_for_elem(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/sql/sqltypes.py&#34;, line 1611, in _object_value_for_elem
    raise LookupError(
LookupError: &#39;draft&#39; is not among the defined enum values. Enum name: poststatus. Possible values: DRAFT, IN_PROCESS, PUBLISHED, ARCHIVED
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/sql/sqltypes.py", line 1609, in _object_value_for_elem
    return self._object_lookup[elem]
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyError: 'draft'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py", line 1488, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py", line 1466, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py", line 1463, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py", line 872, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py", line 870, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/flask/app.py", line 855, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nickfiddes/Code/projects/blog/app/main/routes.py", line 15, in index
    posts = Post.query.order_by(Post.created_at.desc()).all()
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/orm/query.py", line 2672, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py", line 1769, in all
    return self._allrows()
           ^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py", line 548, in _allrows
    rows = self._fetchall_impl()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py", line 1676, in _fetchall_impl
    return self._real_result._fetchall_impl()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py", line 2270, in _fetchall_impl
    return list(self.iterator)
           ^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/orm/loading.py", line 219, in chunks
    fetch = cursor._raw_all_rows()
            ^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/engine/result.py", line 541, in _raw_all_rows
    return [make_row(row) for row in rows]
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "lib/sqlalchemy/cyextension/resultproxy.pyx", line 22, in sqlalchemy.cyextension.resultproxy.BaseRow.__init__
  File "lib/sqlalchemy/cyextension/resultproxy.pyx", line 79, in sqlalchemy.cyextension.resultproxy._apply_processors
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/sql/sqltypes.py", line 1729, in process
    value = self._object_value_for_elem(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/sqlalchemy/sql/sqltypes.py", line 1611, in _object_value_for_elem
    raise LookupError(
LookupError: 'draft' is not among the defined enum values. Enum name: poststatus. Possible values: DRAFT, IN_PROCESS, PUBLISHED, ARCHIVED


-->
