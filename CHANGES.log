# Changes Log

All notable changes to this project are documented in this file.

## [Unreleased]

### Added
- LLM integration with improved interface and functionality
  - Added Test button to LLM Action modal in blog develop interface
  - Added '+ Add New Prompt' link in LLM settings panel
  - Added /api/v1/llm/prompts POST endpoint for creating new LLMPrompt records
  - Added comprehensive API documentation for workflow endpoints
  - Added docs/workflow/field_reference.md for workflow sub-stage fields
- Database management interface improvements
  - Enhanced virtual environment handling in run_server.sh
  - Added automatic venv detection and activation
- Major UI redesign of blog index page
  - Replaced table with modern, responsive card/grid layout
  - Added floating 'New Post' button
  - Added modern toggle for showing deleted posts
  - Improved accessibility and mobile responsiveness
  - Refined dark theme with improved contrast
  - Added json, edit, and delete icons/links to each post row
- Added new LLM API endpoints:
  - GET /api/v1/llm/templates for prompt templates
  - GET /api/v1/llm/config for LLM configuration
  - GET /api/v1/llm/prompts for prompt management
  - Enhanced /api/v1/llm/models/ollama endpoint

### Changed
- Updated all workflow documentation for asynchronous model
- Moved New Post button to main header
- Enhanced LLM interface JavaScript functionality
- Improved LLMService timeout handling and error reporting
- Increased LLM backend request timeout to 60 seconds
- Reorganized Idea Scope and Provisional Title fields with independent LLM modals
- Updated DEPENDENCIES.md with current project dependencies
- Standardized all LLM API endpoints to use /api/v1/llm/ prefix
  - Updated routes in app/llm/routes.py
  - Updated documentation in docs/api/llm_endpoints.md
  - Updated test cases in tests/test_llm.py

### Fixed
- Fixed incorrect route registration for /blog/develop/<post_id>
- Fixed all fetch URLs in blog development template
- Fixed Post.updated_at updates for PostDevelopment fields
- Fixed LLM Test Interface model selection and display
- Fixed Idea Scope modal prompt template saving
- Fixed template dropdown population in LLM settings panels
- Fixed Generate button functionality in LLM settings panels
- Fixed blueprint registration issues
- Fixed template rendering problems
- Improved error handling in LLMService
- Fixed prompt template loading in LLM Actions builder
- Fixed LLM model selection in builder interface
- Fixed prompt template management endpoints
- Improved LLM configuration handling with default values
- Fixed prompt template and model loading in LLM Actions builder
- Standardized API endpoints across LLM management interfaces
- Improved model loading state display in builder interface
- Fixed LLM model selection persistence in configuration
- Added automatic configuration saving when model is selected
- Improved model selection state management across pages
- Fixed LLM model dropdown population in Actions builder page
- Synchronized model selection between LLM management and Actions builder
- Added current model selection state to model dropdowns
- Fixed action builder form submission in LLM Actions page
- Corrected field mapping between form and API endpoint
- Added proper error handling and success feedback for action creation
- Fixed action creation in LLM Actions builder
- Added proper validation for required fields in action creation
- Improved error handling and logging for action creation
- Added default values for temperature and max_tokens
- Fixed route path for action creation in LLM Actions builder
- Updated JavaScript to use correct endpoint path
- Improved route registration to avoid prefix duplication
- Reorganized LLM routes to avoid conflicts between blueprints
- Moved action creation endpoint to API blueprint
- Fixed endpoint paths in JavaScript code
- Improved route organization and documentation
- Cleaned up route organization to separate UI and API routes
- Removed duplicate route definitions
- Fixed route conflicts between blueprints
- Improved code organization and maintainability

### Removed
- Removed PromptTemplate model and table
- Removed legacy references to sequential workflow initialization

## [0.1.0] - 2024-03-01

### Added
- Initial project setup
- Basic blog functionality
- User authentication system
- API endpoints for core features
- Database models and migrations
- Frontend templates and styling
- Development environment configuration
- Testing framework implementation
- Documentation structure

2024-03-21
- Updated development interface to properly sync template selection with textarea
- Enhanced stages documentation to include references to development interface and LLM assistance
- Added LLM assistance details to Development Stage documentation
- Updated API documentation for LLM actions endpoint
  - Added detailed request/response formats for template management
  - Added documentation for GET template settings endpoint
  - Updated error response format documentation
  - Added template_name field for new template creation

2024-03-26
- Updated documentation for template management functionality
  - Added template management section to DEVELOPMENT.md
  - Updated LLM architecture documentation with template persistence details
  - Enhanced documentation of settings persistence and synchronization
- Updated LLM API documentation to include new template settings persistence endpoint
- Added documentation for automatic template settings persistence in UI
- Updated LLM Action Test Feature documentation to reflect current functionality

2024-03-27
- Updated API documentation for LLM endpoints
  - Added template management endpoints documentation
  - Added documentation for /api/v1/llm/actions/ endpoint
  - Added documentation for /api/v1/llm/test endpoint
  - Enhanced error response documentation with timeout details
- Standardized API route prefixes to consistently use /api/v1/llm/
- Updated frontend fetch calls in develop.html to use consistent API paths
- Updated backend routes in llm.py to use proper URL prefix
- Fixed route path mismatches between frontend and backend

2024-03-28
- Fixed template persistence in LLM modals
  - Updated element IDs to use consistent field name suffixes
  - Fixed template selection and persistence for provisional_title field
  - Synchronized template dropdown with textarea across all fields
  - Ensured proper saving of LLM settings for all fields

2024-03-29
- Fixed prompt template text persistence
  - Fixed prompt template saving and loading in both idea_scope and provisional_title modals
  - Ensured both dropdown and textarea are properly synchronized
  - Fixed element ID references in JavaScript code
  - Added proper error handling for template loading

[2024-03-XX]
- Enhanced template management system:
  - Added automatic synchronization between template dropdown and textarea
  - Improved template settings persistence
  - Added real-time saving of LLM settings
  - Enhanced error handling and user feedback
  - Updated development documentation to reflect changes

2025-04-30
- Enhanced LLM Actions system:
  - Added source field selection from workflow fields
  - Added prompt template selection from existing templates
  - Added LLM model selection with status indicators
  - Added test functionality with input/output preview
  - Updated database models for better action tracking
  - Improved error handling and logging
  - Added execution history with status tracking

2025-05-01 - LLM Actions UI Improvements
- Redesigned LLM Actions page with improved styling and contrast
- Added clear action cards with detailed information display
- Improved tab navigation with better visual feedback
- Enhanced form styling with better input contrast and labels
- Removed URL parameters from action creation
- Fixed action display in the Actions tab
- Improved modal styling and form organization
- Added proper field name display in action cards
- Standardized button styles and layout
- Added consistent dark theme styling across all components

2025-05-01 - LLM Action Routing Fix
- Fixed duplicate route definitions between llm and api blueprints
- Consolidated all API routes into app/api/llm.py
- Moved UI routes to app/llm/routes.py
- Updated frontend code to use correct API endpoints
- Fixed issue with LLM action creation not working due to route conflicts

2025-05-01 - LLM Actions Additional Improvements
- Added delete functionality for LLM actions
- Fixed prompt template text wrapping in action cards
- Updated edit functionality to load actions into Builder tab
- Improved action update/create form handling
- Added confirmation dialog for action deletion
- Enhanced error handling for action operations

2025-05-01 - LLM Actions Test Tab Improvements
- Fixed Test tab functionality
- Added proper test execution with loading states
- Added error handling for test runs
- Improved test output display with proper wrapping
- Added action details to test selection dropdown
- Enhanced user feedback during test execution

[2024-03-21] LLM Actions Test Functionality
- Added missing /api/v1/llm/test endpoint for testing LLM actions
- Implemented execute_llm_request function in services.py
- Fixed "No output generated" issue by adding proper error handling and logging
- Added detailed request/response logging for better debugging
- Improved error messages in the UI for better user feedback

[2024-03-21] Enhanced LLM Error Handling
- Added comprehensive error handling in LLM services
- Added model availability validation before test execution
- Improved error messages with specific failure reasons
- Added detailed logging throughout LLM request lifecycle
- Added timeout handling with appropriate error responses
- Added validation for required fields with specific error messages
- Added response format validation for Ollama service
- Enhanced logging for request/response debugging

[2024-03-21] Fixed Ollama Response Format Handling
- Updated LLM service to handle multiple Ollama response formats
- Added support for responses with model_used field
- Improved response format validation and error handling
- Fixed "No output generated" error in test functionality

[2024-03-21] Standardized LLM Response Format
- Updated frontend to handle multiple response formats
- Standardized backend response format for consistency
- Added model information to test responses
- Improved error handling for unexpected formats
- Fixed frontend display of test results

[2024-03-21] Fixed LLM Test Input and Response Handling
- Fixed prompt template formatting to properly incorporate test input
- Moved prompt formatting to frontend for better transparency
- Updated response handling to support all Ollama response formats
- Fixed "No output generated" error by improving response parsing
- Added support for direct string responses
- Improved error messages for better debugging

[2025-05-01]
- Fixed LLM test functionality:
  - Added proper prompt template with {{input}} placeholder
  - Added validation to ensure templates have required placeholder
  - Added comprehensive logging throughout request lifecycle
  - Fixed prompt + input combination logic
  - Added better error messages for template issues

[2025-05-01]
- Split LLM interface into separate pages:
  - Created dedicated configuration page (config.html)
  - Created dedicated prompt templates page (templates.html)
  - Created dedicated test interface (test.html)
  - Added consistent navigation between pages
  - Improved UI/UX with better feedback and error handling
  - Added live preview of prompt + input combination

[2024-03-21]
- Improved LLM templates page styling:
  - Added consistent admin styling system integration
  - Enhanced button styles with proper hover states and visual hierarchy
  - Improved modal design with better spacing and transitions
  - Updated form elements for better usability
  - Added proper color variables usage from admin theme
  - Enhanced template cards with better shadows and animations
  - Improved navigation tabs styling

[2024-03-21]
- Fixed LLM template editing functionality:
  - Added missing GET endpoint for retrieving single prompt by ID
  - Fixed route path for fetching prompt details
  - Improved error handling for prompt editing

[2024-03-21]
- Enhanced LLM prompt template editor:
  - Improved field selector with stage-based grouping
  - Added drag & drop functionality for field insertion
  - Enhanced visual feedback for drag & drop interactions
  - Added placeholder text and help messages
  - Improved template editor styling and usability
  - Fixed field insertion at cursor position

[2024-03-21]
- Fixed route name mismatches across LLM templates:
  - Updated 'llm.templates_page' to 'llm.templates' in all template files
  - Fixed navigation links in config.html, templates.html, and test.html
  - Ensured consistent route naming across the LLM management interface

[2024-03-21]
- Fixed JavaScript template literal syntax in templates.html:
  - Fixed conflict between JavaScript template literals and Jinja2 syntax
  - Updated field insertion code to use string concatenation
  - Fixed 500 error in templates route

[2024-03-21]
- Improved LLM template field selector:
  - Replaced long field list with two-level dropdown system
  - Added stage selection dropdown to filter fields
  - Added dynamic field tag creation for selected fields
  - Fixed field insertion syntax in template editor
  - Enhanced drag and drop interaction with better visual feedback
  - Improved field tag styling and usability

[2025-05-01]
- Fixed issue where test suite was accidentally dropping production database
- Created separate test database (blog_test) to prevent test suite from affecting production data

[2025-05-01]
- Standardized styling across LLM management interface:
  - Updated navigation tabs with consistent styling and hover effects
  - Unified card and section styling with consistent shadows and animations
  - Standardized form elements and button styles
  - Improved visual hierarchy and spacing
  - Enhanced dark theme consistency

[2025-05-01]
- Improved button styling in LLM interface:
  - Added proper primary button styling for main actions
  - Standardized action button appearance across all pages
  - Enhanced visual hierarchy for primary actions

[2025-05-01]
- Fixed field placeholder insertion in template editor:
  - Resolved string concatenation issues with Jinja2 template
  - Improved JavaScript handling of template placeholders
  - Fixed field text insertion at cursor position
  - Added proper handling of curly braces in JavaScript

[2025-05-01]
- Fixed template modal functionality:
  - Fixed New Template and Edit Template buttons
  - Added proper modal open/close handling
  - Improved form reset and field clearing
  - Added modal close on outside click
  - Fixed body scroll lock when modal is open
  - Enhanced error handling for template operations

[2025-05-01]
- Fixed template button functionality:
  - Replaced onclick attributes with proper event listeners
  - Added data-id attributes for template actions
  - Improved button event handling
  - Fixed modal open/close functionality
  - Enhanced error handling for template operations

[2025-05-01]
- Fixed JavaScript syntax error in templates page:
  - Fixed unexpected EOF error
  - Reorganized function definitions
  - Added proper error handling
  - Added debug logging
  - Improved code structure and organization

2024-05-02: Fixed TypeError in /llm/templates New Template button (showNewTemplateModal) by adding null and classList check before accessing classList.contains on selectedFields.firstChild.